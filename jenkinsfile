pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code...'
                // Specify your build commands here (e.g., mvn clean install)
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Specify your test commands here (e.g., mvn test)
            }
            post {
                success {
                    emailext (
                        to: "nimeshmakevitage@gmail.com",
                        subject: "Unit and Integration Tests Successful: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                        body: "The unit and integration tests were successful!\n\nCheck the details at ${env.BUILD_URL}.",
                        attachLog: true // Attach the log files to the email
                    )
                }
                failure {
                    emailext (
                        to: "nimeshmakevitage@gmail.com",
                        subject: "Unit and Integration Tests Failed: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                        body: "The unit and integration tests failed.\n\nCheck the details at ${env.BUILD_URL}.",
                        attachLog: true // Attach the log files to the email
                    )
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing the code...'
                // Example: sonar-scanner command or any code analysis tool you choose
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Specify your security scanning commands here (e.g., OWASP ZAP, Snyk)
            }
            post {
                success {
                    emailext (
                        to: "nimeshmakevitage@gmail.com",
                        subject: "Security Scan Successful: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                        body: "The security scan was successful!\n\nCheck the details at ${env.BUILD_URL}.",
                        attachLog: true // Attach the log files to the email
                    )
                }
                failure {
                    emailext (
                        to: "nimeshmakevitage@gmail.com",
                        subject: "Security Scan Failed: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                        body: "The security scan failed.\n\nCheck the details at ${env.BUILD_URL}.",
                        attachLog: true // Attach the log files to the email
                    )
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                // Example: Use AWS CLI or kubectl for deployment to staging
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Specify your integration test commands for staging
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                // Example: Use AWS CLI or kubectl for deployment to production
            }
        }
    }

    post {
        success {
            emailext (
                to: "nimeshmakevitage@gmail.com",
                subject: "Build Successful: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                body: "The build was successful!\n\nCheck the details at ${env.BUILD_URL}.",
                attachLog: true // Attach the log files to the email
            )
        }
        failure {
            emailext (
                to: "nimeshmakevitage@gmail.com",
                subject: "Build Failed: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                body: "The build failed.\n\nCheck the details at ${env.BUILD_URL}.",
                attachLog: true // Attach the log files to the email
            )
        }
        unstable {
            emailext (
                to: "nimeshmakevitage@gmail.com",
                subject: "Build Unstable: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                body: "The build is unstable.\n\nCheck the details at ${env.BUILD_URL}.",
                attachLog: true // Attach the log files to the email
            )
        }
    }
}
