pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'Building the code...'
                // Add your build commands here, e.g., compile, npm install, etc.
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Add your testing commands here, e.g., running test scripts, mvn test, npm test, etc.
            }
            post {
                success {
                    emailext (
                        to: "nimeshmakevitage@gmail.com",
                        subject: "Unit and Integration Tests Successful: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                        body: "The unit and integration tests were successful for ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}.",
                        attachLog: true // Attach the log files
                    )
                }
                failure {
                    emailext (
                        to: "nimeshmakevitage@gmail.com",
                        subject: "Unit and Integration Tests Failed: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                        body: "The unit and integration tests failed for ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}.",
                        attachLog: true // Attach the log files
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Analyzing code...'
                // Add your code analysis commands here, e.g., SonarQube, static analysis tools
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Add your security scanning commands here, e.g., dependency check, vulnerability scans
            }
            post {
                success {
                    emailext (
                        to: "nimeshmakevitage@gmail.com",
                        subject: "Security Scan Successful: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                        body: "The security scan was successful for ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}.",
                        attachLog: true // Attach the log files
                    )
                }
                failure {
                    emailext (
                        to: "nimeshmakevitage@gmail.com",
                        subject: "Security Scan Failed: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}",
                        body: "The security scan failed for ${env.JOB_NAME} - Build #${env.BUILD_NUMBER}.",
                        attachLog: true // Attach the log files
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                // Add your deployment commands here, e.g., deploying to a test environment, Docker, Kubernetes, etc.
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Add your integration testing commands here, verifying the deployment on staging
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                // Add your production deployment commands here
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs() // Cleans up the workspace after the pipeline is complete
        }
    }
}
