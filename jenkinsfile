pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven...'
                echo 'Tool: Maven'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests using JUnit...'
                echo 'Running integration tests using TestNG...'
                echo 'Tools: JUnit, TestNG'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code using SonarQube...'
                echo 'Tool: SonarQube'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan using OWASP Dependency-Check...'
                echo 'Tool: OWASP Dependency-Check'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying the application to AWS EC2 instance...'
                echo 'Tool: AWS CLI'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on the staging environment...'
                echo 'Tool: Selenium'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying the application to the production server on AWS EC2 instance...'
                echo 'Tool: AWS CLI'
            }
        }
    }

    post {
        success {
            mail to: 'your-email@example.com',
                 subject: "Build Successful: ${env.JOB_NAME}",
                 body: "The build was successful!\n\nCheck the details at ${env.BUILD_URL}.",
                 attachLog: true
        }
        failure {
            mail to: 'your-email@example.com',
                 subject: "Build Failed: ${env.JOB_NAME}",
                 body: "The build failed.\n\nCheck the details at ${env.BUILD_URL}.",
                 attachLog: true
        }
    }
}
