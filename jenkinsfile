pipeline {
    agent any
    stages {
        stage('Checkout SCM') {
            steps {
                echo 'Checking out from SCM...'
                checkout scm
            }
        }
        stage('Build') {
            steps {
                echo 'Building...'
                // Add your build commands here
            }
            post {
                success {
                    script {
                        def buildNumber = env.BUILD_NUMBER
                        mail to: 'nimeshmakevitage@gmail.com',
                             subject: "Build Successful: ${env.JOB_NAME} - Build #${buildNumber}",
                             body: "The build was successful!\n\nCheck the details at ${env.BUILD_URL}."
                    }
                }
                failure {
                    script {
                        def buildNumber = env.BUILD_NUMBER
                        mail to: 'nimeshmakevitage@gmail.com',
                             subject: "Build Failed: ${env.JOB_NAME} - Build #${buildNumber}",
                             body: "The build failed.\n\nCheck the details at ${env.BUILD_URL}."
                    }
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                // Add your testing commands here
            }
            post {
                success {
                    script {
                        def buildNumber = env.BUILD_NUMBER
                        mail to: 'nimeshmakevitage@gmail.com',
                             subject: "Tests Successful: ${env.JOB_NAME} - Build #${buildNumber}",
                             body: "The tests were successful!\n\nCheck the details at ${env.BUILD_URL}."
                    }
                }
                failure {
                    script {
                        def buildNumber = env.BUILD_NUMBER
                        mail to: 'nimeshmakevitage@gmail.com',
                             subject: "Tests Failed: ${env.JOB_NAME} - Build #${buildNumber}",
                             body: "The tests failed.\n\nCheck the details at ${env.BUILD_URL}."
                    }
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code...'
                // Add code analysis commands here
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Add security scan commands here
            }
            post {
                success {
                    script {
                        def buildNumber = env.BUILD_NUMBER
                        mail to: 'nimeshmakevitage@gmail.com',
                             subject: "Security Scan Successful: ${env.JOB_NAME} - Build #${buildNumber}",
                             body: "The security scan was successful!\n\nCheck the details at ${env.BUILD_URL}."
                    }
                }
                failure {
                    script {
                        def buildNumber = env.BUILD_NUMBER
                        mail to: 'nimeshmakevitage@gmail.com',
                             subject: "Security Scan Failed: ${env.JOB_NAME} - Build #${buildNumber}",
                             body: "The security scan failed.\n\nCheck the details at ${env.BUILD_URL}."
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying...'
                // Add deployment commands here
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Add integration testing commands here
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                // Add production deployment commands here
            }
        }
        stage('Complete') {
            steps {
                echo 'Build and deployment process completed.'
            }
        }
    }
    post {
        success {
            script {
                def buildNumber = env.BUILD_NUMBER
                mail to: 'nimeshmakevitage@gmail.com',
                     subject: "Pipeline Successful: ${env.JOB_NAME} - Build #${buildNumber}",
                     body: "The pipeline completed successfully!\n\nCheck the details at ${env.BUILD_URL}."
            }
        }
        failure {
            script {
                def buildNumber = env.BUILD_NUMBER
                mail to: 'nimeshmakevitage@gmail.com',
                     subject: "Pipeline Failed: ${env.JOB_NAME} - Build #${buildNumber}",
                     body: "The pipeline failed.\n\nCheck the details at ${env.BUILD_URL}."
            }
        }
        unstable {
            script {
                def buildNumber = env.BUILD_NUMBER
                mail to: 'nimeshmakevitage@gmail.com',
                     subject: "Pipeline Unstable: ${env.JOB_NAME} - Build #${buildNumber}",
                     body: "The pipeline is unstable.\n\nCheck the details at ${env.BUILD_URL}."
            }
        }
    }
}
